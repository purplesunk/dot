#!/bin/bash

declare installation_path
installation_path="$XDG_DATA_HOME/fonts"

lookup_fonts() {
  curl -sSL 'https://api.github.com/repos/ryanoasis/nerd-fonts/releases/latest' | \
    jq -r '.assets[] 
      | select(.content_type == "application/x-xz") 
      | .browser_download_url'
}

list_fonts() {
  fonturls=$(lookup_fonts)
  [[ -z "$fonturls" ]] && \
    echo 'Unable to look for the fonts' && \
    exit 1
  for font in $fonturls;
  do
    font=${font##*\/}
    font=${font%%.*}
    echo "$font"
  done
  exit 0
}

get_install_path() {
  local path=${1//output=/}
  [[ -d "$path" && -w "$path" ]] && echo "$path" || \
  echo 'Invalid directory' && exit 1
}

download_font() {
  local fonturl filename fontname
  fonturl="$1"
  filename="$2"
  fontname="$3"
  curl -L "$fonturl" -o "/tmp/$filename"
  [[ ! -f "/tmp/$filename" ]] && \
    echo 'Could not download the font' && \
    return 1
  mkdir -p "$installation_path/$fontname"
  tar xvaf "/tmp/$filename" -C "$installation_path/$fontname"
  return 0
}

search_font() {
  local fonturls lookedfont filename font
  fonturls="$2"
  lookedfont="${1,,}"
  for fonturl in $fonturls;
  do
    filename=${fonturl##*\/}
    font=${filename%%.*}
    [[ ${font,,} == "$lookedfont" ]] && \
      download_font "$fonturl" "$filename" "$font" && \
      break
  done
}

search_fonts() {
  local fonturls fonts
  fonts="$1"
  fonturls=$(lookup_fonts)
  for font in $fonts;
  do
    search_font "$font" "$fonturls"
  done
}

declare fonts=""
for arg in "$@";
do
  case "$arg" in
    list) list_fonts;;
    output=*) installation_path=$(get_install_path "$arg");;
    help) ;;
    *) fonts+="$arg ";;
  esac
done

search_fonts "$fonts"

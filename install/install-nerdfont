#!/bin/bash

declare -A font_arr
declare installation_path

installation_path="$XDG_DATA_HOME/fonts"
installation_path="${installation_path:-$HOME/.fonts}"

install_nerdfont() {
  local fonts=""
  for arg in "$@"; do
    case "$arg" in
      list) list_fonts;;
      *) fonts+=" $arg";
    esac
  done

  [[ -n "$fonts" ]] && install_fonts "$fonts"
}

fontname() {
  local font="$1"
  font=${font##*\/}
  font=${font%%.*}
  font=${font,,}
  printf '%s' "$font"
}

lookup_fonts() {
  local fonts
  fonts=$(curl -sSL \
    'https://api.github.com/repos/ryanoasis/nerd-fonts/releases/latest' | \
    grep -E 'browser.*tar')
  [[ -z "$fonts" ]] && exit 1
  fonts=${fonts//\"browser_download_url\":/}
  fonts=${fonts//\"/}
  echo "$fonts"
}

build_font_arr() {
  local urls
  urls="$(lookup_fonts)"
  for font_url in $urls; do
    font="$(fontname "$font_url")"
    font_arr["$font"]="$font_url"
  done
}

install_fonts() {
  local fonts font font_url
  fonts="$1"

  build_font_arr

  for font in $fonts; do
    font_url="${font_arr[$font]}"

    [[ -z "$font_url" ]] && \
      echo "$font not found" && continue

    download_font "$font_url" "$font"
  done
}

download_font() {
  local url font download_path install_path
  font="$2"
  url="$1"

  install_path="$installation_path/${font}-nerdfont"
  download_path="/tmp/$font.tar.xz"

  curl -sSL "$url" -o "$download_path"
  [[ ! -f "$download_path" ]] && \
    echo "Could not download the $font" && return 1

  mkdir -p "$install_path"
  tar xJf "$download_path" -C "$install_path" && \
    echo "$font installed in $install_path"
}

list_fonts() {
  build_font_arr
  for font in "${!font_arr[@]}"; do
    printf '%s\n' "$font"
  done
  exit 0
}

install_nerdfont "$@"
